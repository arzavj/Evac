  <script src="http://staging.tokbox.com/v0.91/js/TB.min.js"></script>
	
	
  <%= javascript_tag do%>
	jQuery.noConflict();

    var apiKey = '<%= $apiKey %>';
    var sessionId = '<%= @sessionID %>';
    var token = '<%= @token %>';           

 
    TB.setLogLevel(TB.DEBUG); // Set this for helpful debugging messages in console
 
    var session = TB.initSession(sessionId);      
    session.addEventListener("sessionConnected", sessionConnectedHandler);      
    session.addEventListener("streamCreated", streamCreatedHandler); 

    session.connect(apiKey, token);
	
	var inSession = 0;
	
	window.onbeforeunload = function (){
		jQuery.noConflict();
	
		if(inSession){
			var query = "notes=" + document.getElementById("notes").value + "&qID=" + <%=params["qID"]%>;
		
			jQuery.ajax({
			type: 'GET',
			url: '/tok/pastQuestion',
			data: query
			});
		
			return "Your session is over";
		}
		else{
			
			var query = "qID="+<%=params["qID"]%>;
			
			session.cleanup();
			
			jQuery.ajax({
			type: 'GET',
			url: '/tok/submitStatus',
			data: query
			});
			
			return "You're question is being scheduled.";
		}
	}
	
    var publisher;
 
    function sessionConnectedHandler(event) {
	alert('Ready');
      publisher = session.publish("asker");
    }

   function streamCreatedHandler(event) {
      // Subscribe to any new streams that are created
      subscribeToStreams(event.streams);
    }
    
    function createForm(){
        var form = document.getElementById("rank");
               
        var submit = document.createElement("input");
        submit.setAttribute("type", "submit");
        submit.setAttribute("value", "Rank");
        
        form.appendChild(submit);
    }
     
    function subscribeToStreams(streams) {
      for (var i = 0; i < streams.length; i++) {
        // Make sure we don't subscribe to ourself
        if (streams[i].connection.connectionId == session.connection.connectionId) {
          continue;
        }
                           
        // Subscribe to the stream
        session.subscribe(streams[i], "answer");
			
        createForm();
		inSession = 1;
        return;
      }
	  
	}

<% end %>

<div class="transparent-background">
<center>
  <div id="asker"></div>
  <div id="answer"></div>
</center>

<center>
<form id="leave" action="/" method= "get">
<input class="btn" type="submit" value="Leave Session" />
</form>
<form id="rank" action="/tok/SetRank" method= "get">
<input type = "hidden" name = "qID" value = <%= params["qID"] %> />
<input type="hidden" name= "user" value="1">
</form>
</center>
<center>
	<div class="SmallFont">Notes:</div>
	<textarea id="notes" COLS=100 ROWS=10></textarea>
</center>
</div>
